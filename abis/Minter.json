{
  "contractName": "Minter",
  "abi": [
    {
      "name": "Minted",
      "inputs": [
        {
          "type": "address",
          "name": "recipient",
          "indexed": true
        },
        {
          "type": "address",
          "name": "gauge",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "minted",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_token"
        },
        {
          "type": "address",
          "name": "_controller"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "name": "mint",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "gauge_addr"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 99956
    },
    {
      "name": "mint_many",
      "outputs": [],
      "inputs": [
        {
          "type": "address[8]",
          "name": "gauge_addrs"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 408046
    },
    {
      "name": "mint_for",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "gauge_addr"
        },
        {
          "type": "address",
          "name": "_for"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 101198
    },
    {
      "name": "toggle_approve_mint",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "minting_user"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function",
      "gas": 36697
    },
    {
      "name": "token",
      "outputs": [
        {
          "type": "address",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1211
    },
    {
      "name": "controller",
      "outputs": [
        {
          "type": "address",
          "name": ""
        }
      ],
      "inputs": [],
      "stateMutability": "view",
      "type": "function",
      "gas": 1241
    },
    {
      "name": "minted",
      "outputs": [
        {
          "type": "uint256",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        },
        {
          "type": "address",
          "name": "arg1"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "gas": 1701
    },
    {
      "name": "allowed_to_mint_for",
      "outputs": [
        {
          "type": "bool",
          "name": ""
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        },
        {
          "type": "address",
          "name": "arg1"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "gas": 1731
    }
  ],
  "bytecode": "0x604061057961014039602061057960c03960c05160a01c1561002057600080fd5b602060206105790160c03960c05160a01c1561003b57600080fd5b610140516000556101605160015561056156341561000a57600080fd5b60043610156100185761050d565b600035601c526000156101f5575b610180526101405261016052600060206102206024633f9095b76101a052610140516101c0526101bc6001545afa61005d57600080fd5b601f3d1161006a57600080fd5b60005061022051121561007c57600080fd5b60206102206024634b8200936101a052610160516101c0526101bc6000610140515af16100a857600080fd5b601f3d116100b557600080fd5b600050610220506020610240602463094007076101c052610160516101e0526101dc610140515afa6100e657600080fd5b601f3d116100f357600080fd5b600050610240516101a0526101a05160026101605160e05260c052604060c0206101405160e05260c052604060c020548082101561013057600080fd5b808203905090506101c05260006101c05118156101ef57602061028060446340c10f196101e05261016051610200526101c051610220526101fc60006000545af161017a57600080fd5b601f3d1161018757600080fd5b600050610280506101a05160026101605160e05260c052604060c0206101405160e05260c052604060c02055610140516101e0526101a05161020052610160517f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f060406101e0a25b61018051565b636a62784260005114156102525762ffffff541561021257600080fd5b600162ffffff5560043560a01c1561022957600080fd5b600435610140523361016052610160516101405160065801610026565b600050600062ffffff55005b63a51e190460005114156103375762ffffff541561026f57600080fd5b600162ffffff556000610120525b610120516004013560a01c1561029257600080fd5b60206101205101610120526101006101205110156102af5761027d565b61014060006008818352015b600461014051600881106102ce57600080fd5b602002013515156102de5761032c565b61014051600461014051600881106102f557600080fd5b6020020135610160523361018052610180516101605160065801610026565b610140526000505b81516001018083528114156102bb575b5050600062ffffff55005b6327f18ae360005114156103c95762ffffff541561035457600080fd5b600162ffffff5560043560a01c1561036b57600080fd5b60243560a01c1561037b57600080fd5b60033360e05260c052604060c02060243560e05260c052604060c02054156103c0576004356101405260243561016052610160516101405160065801610026565b6000505b600062ffffff55005b63dd289d6060005114156104245760043560a01c156103e757600080fd5b600360043560e05260c052604060c0203360e05260c052604060c0205415600360043560e05260c052604060c0203360e05260c052604060c02055005b63fc0c546a60005114156104405760005460005260206000f350005b63f77c4791600051141561045c5760015460005260206000f350005b638b752bb060005114156104b45760043560a01c1561047a57600080fd5b60243560a01c1561048a57600080fd5b600260043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b63a0990033600051141561050c5760043560a01c156104d257600080fd5b60243560a01c156104e257600080fd5b600360043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b5b60006000fd5b61004e6105610361004e60003961004e610561036000f3",
  "deployedBytecode": "0x341561000a57600080fd5b60043610156100185761050d565b600035601c526000156101f5575b610180526101405261016052600060206102206024633f9095b76101a052610140516101c0526101bc6001545afa61005d57600080fd5b601f3d1161006a57600080fd5b60005061022051121561007c57600080fd5b60206102206024634b8200936101a052610160516101c0526101bc6000610140515af16100a857600080fd5b601f3d116100b557600080fd5b600050610220506020610240602463094007076101c052610160516101e0526101dc610140515afa6100e657600080fd5b601f3d116100f357600080fd5b600050610240516101a0526101a05160026101605160e05260c052604060c0206101405160e05260c052604060c020548082101561013057600080fd5b808203905090506101c05260006101c05118156101ef57602061028060446340c10f196101e05261016051610200526101c051610220526101fc60006000545af161017a57600080fd5b601f3d1161018757600080fd5b600050610280506101a05160026101605160e05260c052604060c0206101405160e05260c052604060c02055610140516101e0526101a05161020052610160517f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f060406101e0a25b61018051565b636a62784260005114156102525762ffffff541561021257600080fd5b600162ffffff5560043560a01c1561022957600080fd5b600435610140523361016052610160516101405160065801610026565b600050600062ffffff55005b63a51e190460005114156103375762ffffff541561026f57600080fd5b600162ffffff556000610120525b610120516004013560a01c1561029257600080fd5b60206101205101610120526101006101205110156102af5761027d565b61014060006008818352015b600461014051600881106102ce57600080fd5b602002013515156102de5761032c565b61014051600461014051600881106102f557600080fd5b6020020135610160523361018052610180516101605160065801610026565b610140526000505b81516001018083528114156102bb575b5050600062ffffff55005b6327f18ae360005114156103c95762ffffff541561035457600080fd5b600162ffffff5560043560a01c1561036b57600080fd5b60243560a01c1561037b57600080fd5b60033360e05260c052604060c02060243560e05260c052604060c02054156103c0576004356101405260243561016052610160516101405160065801610026565b6000505b600062ffffff55005b63dd289d6060005114156104245760043560a01c156103e757600080fd5b600360043560e05260c052604060c0203360e05260c052604060c0205415600360043560e05260c052604060c0203360e05260c052604060c02055005b63fc0c546a60005114156104405760005460005260206000f350005b63f77c4791600051141561045c5760015460005260206000f350005b638b752bb060005114156104b45760043560a01c1561047a57600080fd5b60243560a01c1561048a57600080fd5b600260043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b63a0990033600051141561050c5760043560a01c156104d257600080fd5b60243560a01c156104e257600080fd5b600360043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b5b60006000fd",
  "source": "# @version 0.2.8\r\n\"\"\"\r\n@title Token Minter\r\n@author Curve Finance\r\n@license MIT\r\n\"\"\"\r\n\r\ninterface LiquidityGauge:\r\n    # Presumably, other gauges will provide the same interfaces\r\n    def integrate_fraction(addr: address) -> uint256: view\r\n    def user_checkpoint(addr: address) -> bool: nonpayable\r\n\r\ninterface MERC20:\r\n    def mint(_to: address, _value: uint256) -> bool: nonpayable\r\n\r\ninterface GaugeController:\r\n    def gauge_types(addr: address) -> int128: view\r\n\r\n\r\nevent Minted:\r\n    recipient: indexed(address)\r\n    gauge: address\r\n    minted: uint256\r\n\r\n\r\ntoken: public(address)\r\ncontroller: public(address)\r\n\r\n# user -> gauge -> value\r\nminted: public(HashMap[address, HashMap[address, uint256]])\r\n\r\n# minter -> user -> can mint?\r\nallowed_to_mint_for: public(HashMap[address, HashMap[address, bool]])\r\n\r\n\r\n@external\r\ndef __init__(_token: address, _controller: address):\r\n    self.token = _token\r\n    self.controller = _controller\r\n\r\n\r\n@internal\r\ndef _mint_for(gauge_addr: address, _for: address):\r\n    assert GaugeController(self.controller).gauge_types(gauge_addr) >= 0  # dev: gauge is not added\r\n\r\n    LiquidityGauge(gauge_addr).user_checkpoint(_for)\r\n    total_mint: uint256 = LiquidityGauge(gauge_addr).integrate_fraction(_for)\r\n    to_mint: uint256 = total_mint - self.minted[_for][gauge_addr]\r\n\r\n    if to_mint != 0:\r\n        MERC20(self.token).mint(_for, to_mint)\r\n        self.minted[_for][gauge_addr] = total_mint\r\n\r\n        log Minted(_for, gauge_addr, total_mint)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef mint(gauge_addr: address):\r\n    \"\"\"\r\n    @notice Mint everything which belongs to `msg.sender` and send to them\r\n    @param gauge_addr `LiquidityGauge` address to get mintable amount from\r\n    \"\"\"\r\n    self._mint_for(gauge_addr, msg.sender)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef mint_many(gauge_addrs: address[8]):\r\n    \"\"\"\r\n    @notice Mint everything which belongs to `msg.sender` across multiple gauges\r\n    @param gauge_addrs List of `LiquidityGauge` addresses\r\n    \"\"\"\r\n    for i in range(8):\r\n        if gauge_addrs[i] == ZERO_ADDRESS:\r\n            break\r\n        self._mint_for(gauge_addrs[i], msg.sender)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef mint_for(gauge_addr: address, _for: address):\r\n    \"\"\"\r\n    @notice Mint tokens for `_for`\r\n    @dev Only possible when `msg.sender` has been approved via `toggle_approve_mint`\r\n    @param gauge_addr `LiquidityGauge` address to get mintable amount from\r\n    @param _for Address to mint to\r\n    \"\"\"\r\n    if self.allowed_to_mint_for[msg.sender][_for]:\r\n        self._mint_for(gauge_addr, _for)\r\n\r\n\r\n@external\r\ndef toggle_approve_mint(minting_user: address):\r\n    \"\"\"\r\n    @notice allow `minting_user` to mint for `msg.sender`\r\n    @param minting_user Address to toggle permission for\r\n    \"\"\"\r\n    self.allowed_to_mint_for[minting_user][msg.sender] = not self.allowed_to_mint_for[minting_user][msg.sender]",
  "sourcePath": "C:/Users/MayankVats/Desktop/WORK/blockchain/Royale/rlp/contracts/curve/Minter.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.2.8+commit.069936f"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-28T08:33:47.528Z"
}